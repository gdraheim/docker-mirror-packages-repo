- debug: var=distro_vendor
- debug: var=distro_version
- name: distro packages mirror
  shell: |
     distro_container='{{ distro_vendor + "-repo-" + distro_version }}'
     distro_image='{{ distro_packages_mirror_repository + "/mirror-packages/" + distro_vendor + "-repo:" + distro_version }}'
     need_stop="no"
     need_start="no"
     if [ -n "$distro_container" ]; then
         container_status=`docker inspect -f "{{ "{{.State.Status}}" }}" "$distro_container" 2>/dev/null`
         container_id=`docker inspect -f "{{ "{{.Image}}" }}" "$distro_container" 2>/dev/null`
         image_id=`docker inspect -f "{{ "{{.ID}}" }}" "$distro_image" 2>/dev/null`
         if [ -n "$container_status" ] && [ "$container_status" != "running" ]; then
             need_stop="yes"
             need_start="yes"
         elif [ -n "$container_id" ] && [ "$container_id" != "$image_id" ]; then
             need_stop="yes"
             need_start="yes"
         elif [ -z "$container_id" ] && [ -n "image_id" ]; then
             need_start="yes"
         fi
         echo "image_id: '$image_id'" 
         echo "container_id: '$container_id'"
     fi
     echo "name: '{{ "mirror-packages/" + distro_vendor + "-repo:" + distro_version }}'" # backward compat
     echo "image: '$distro_image'"
     echo "container: '$distro_container'"
     echo "need_start: $need_start"
     echo "need_stop: $need_stop"
  register: distro_packages_mirror_found
- name: distro packages mirror found
  set_fact:
    distro_packages_mirror: '{{ distro_packages_mirror_found.stdout | from_yaml }}'
- name: distro packages mirror image
  set_fact:
    distro_packages_mirror_name: '{{ distro_packages_mirror.name }}'
    distro_packages_mirror_image: '{{ distro_packages_mirror.image }}'
    distro_packages_mirror_container: '{{ distro_packages_mirror.container }}'
- name: distro packages mirror container stop
  command: docker rm -f '{{distro_packages_mirror_container}}'
  when: 'distro_packages_mirror.need_stop'
- name: distro packages mirror container start
  command: docker run -d --rm=true \
    --name '{{distro_packages_mirror_container}}' \
           '{{distro_packages_mirror_image}}'
  when: 'distro_packages_mirror.need_start'
- name: distro packages mirror container address
  command: docker inspect -f '{{ "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" }}' '{{distro_packages_mirror.container}}'
  register: distro_packages_mirror_container_address
  changed_when: no
- name: distro packages extras container ip
  set_fact:
    distro_packages_mirror_ip: '{{ distro_packages_mirror_container_address.stdout }}'
#
- name: distro_packages_mirror_etc_hosts for opensuse
  set_fact:
    distro_packages_mirror_etc_hosts: '{{ dict([("download.opensuse.org", distro_packages_mirror_ip)]) }}'
  when: 'distro_vendor == "opensuse"'
- name: distro_packages_mirror_etc_hosts for centos
  set_fact:
    distro_packages_mirror_etc_hosts: '{{ dict([("mirrorlist.centos.org", distro_packages_mirror_ip)]) }}'
  when: 'distro_vendor == "centos"'
- name: distro_packages_mirror_etc_hosts for ubuntu
  set_fact:
    distro_packages_mirror_etc_hosts: '{{ dict([("archive.ubuntu.com", distro_packages_mirror_ip), ("security.ubuntu.com", distro_packages_mirror_ip)]) }}'
  when: 'distro_vendor == "ubuntu"'
#
- name: distro_packages_mirror_add_hosts for opensuse
  set_fact:
    distro_packages_mirror_add_hosts: '--add-host download.opensuse.org:{{distro_packages_mirror_ip}}'
  when: 'distro_vendor == "opensuse"'
- name: distro_packages_mirror_add_hosts for centos
  set_fact:
    distro_packages_mirror_add_hosts: '--add-host mirrorlist.centos.org:{{distro_packages_mirror_ip}}'
  when: 'distro_vendor == "centos"'
- name: distro_packages_mirror_add_hosts for ubuntu
  set_fact:
    distro_packages_mirror_add_hosts: '--add-host archive.ubuntu.com:{{distro_packages_mirror_ip}} --add-host security.ubuntu.com:{{distro_packages_mirror_ip}}'
  when: 'distro_vendor == "ubuntu"'
#
- debug: var=distro_packages_mirror_add_hosts
